{"mappings":"AAGAA,SAASC,iBAAiB,oBAAoB,KAC1C,MAAMC,EAAaF,SAASG,eAAe,mBACrCC,EAAcJ,SAASK,cAAc,gBACrCC,EAAcN,SAASK,cAAc,eACrCE,EAAeP,SAASK,cAAc,gBACtCG,EAAiBR,SAASK,cAAc,kBACxCI,EAAiBT,SAASK,cAAc,kBAE9C,IAAIK,EAAoB,KAgBxB,SAASC,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,CAuBtC,SAASC,EAAeC,GACtB,SAASC,IACP,MAAMC,EAAM,IAAIC,KACVC,EAAiBJ,EAAaE,EAEpC,GAAIE,GAAkB,EAIpB,OAFAC,cAAcX,QACdA,EAAoB,MAItB,MAAMY,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAlDlC,SAAmBC,GACjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAOZ,MAAO,C,KALME,KAAKC,MAAMN,EAAKI,G,MACfC,KAAKC,MAAMN,EAAMI,EAAOD,G,QACtBE,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,G,QACjCI,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EARnC,K,CAiD6BM,CAAUb,GAGpDd,EAAY4B,YAAcvB,EAAeW,GACzCf,EAAa2B,YAAcvB,EAAeY,GAC1Cf,EAAe0B,YAAcvB,EAAea,GAC5Cf,EAAeyB,YAAcvB,EAAec,E,CAI9CR,IACAP,EAAoByB,YAAYlB,EAAa,I,CA1C/CmB,UAAUlC,EAAY,CACpBmC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIpB,KACjBqB,gBAAiB,EACjBC,QAAQC,GACeA,EAAc,GAEhB,IAAIvB,MAErBwB,MAAM,sCACNvC,EAAYwC,UAAW,GAGvBxC,EAAYwC,UAAW,C,IAgC7BxC,EAAYH,iBAAiB,SAAS,KACpC,MAAM4C,EAAe,IAAI1B,KAAKjB,EAAWU,OAErCkC,MAAMD,GACRF,MAAM,uCAIJE,GAAgB,IAAI1B,KACtBwB,MAAM,gDAIR5B,EAAe8B,GAGfzC,EAAYwC,UAAW,EAAI,GAC3B","sources":["src/js/02-timer.js"],"sourcesContent":["// Import Flatpickr from CDN (already included in HTML)\n// <script src=\"https://cdn.jsdelivr.net/npm/flatpickr\"></script>\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const datePicker = document.getElementById('datetime-picker');\n    const startButton = document.querySelector('[data-start]');\n    const daysDisplay = document.querySelector('[data-days]');\n    const hoursDisplay = document.querySelector('[data-hours]');\n    const minutesDisplay = document.querySelector('[data-minutes]');\n    const secondsDisplay = document.querySelector('[data-seconds]');\n  \n    let countdownInterval = null;\n  \n    function convertMs(ms) {\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = hour * 24;\n  \n      const days = Math.floor(ms / day);\n      const hours = Math.floor((ms % day) / hour);\n      const minutes = Math.floor(((ms % day) % hour) / minute);\n      const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n      return { days, hours, minutes, seconds };\n    }\n  \n    function addLeadingZero(value) {\n      return value.toString().padStart(2, '0');\n    }\n  \n    // Initialize Flatpickr date picker\n    flatpickr(datePicker, {\n      enableTime: true,\n      time_24hr: true,\n      defaultDate: new Date(),\n      minuteIncrement: 1,\n      onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n  \n        if (selectedDate < new Date()) {\n          // If selected date is in the past, show alert and disable start button\n          alert(\"Please choose a date in the future\");\n          startButton.disabled = true;\n        } else {\n          // If selected date is valid, enable the start button\n          startButton.disabled = false;\n        }\n      }\n    });\n  \n    function startCountdown(targetDate) {\n      function updateTimer() {\n        const now = new Date();\n        const timeDifference = targetDate - now;\n  \n        if (timeDifference <= 0) {\n          // Stop the countdown when target date is reached\n          clearInterval(countdownInterval);\n          countdownInterval = null;\n          return;\n        }\n  \n        const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  \n        // Update timer display\n        daysDisplay.textContent = addLeadingZero(days);\n        hoursDisplay.textContent = addLeadingZero(hours);\n        minutesDisplay.textContent = addLeadingZero(minutes);\n        secondsDisplay.textContent = addLeadingZero(seconds);\n      }\n  \n      // Immediately update timer and start interval\n      updateTimer();\n      countdownInterval = setInterval(updateTimer, 1000);\n    }\n  \n    // Start countdown when \"Start\" button is clicked\n    startButton.addEventListener('click', () => {\n      const selectedDate = new Date(datePicker.value);\n  \n      if (isNaN(selectedDate)) {\n        alert(\"Please select a valid date and time\");\n        return;\n      }\n  \n      if (selectedDate <= new Date()) {\n        alert(\"Please choose a date and time in the future\");\n        return;\n      }\n  \n      startCountdown(selectedDate);\n  \n      // Disable the \"Start\" button after countdown starts\n      startButton.disabled = true;\n    });\n  });\n  "],"names":["document","addEventListener","datePicker","getElementById","startButton","querySelector","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","countdownInterval","addLeadingZero","value","toString","padStart","startCountdown","targetDate","updateTimer","now","Date","timeDifference","clearInterval","days","hours","minutes","seconds","ms","minute","second","hour","day","Math","floor","convertMs","textContent","setInterval","flatpickr","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","alert","disabled","selectedDate","isNaN"],"version":3,"file":"02-timer.739589fc.js.map"}